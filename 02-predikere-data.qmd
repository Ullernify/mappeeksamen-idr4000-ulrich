---
title: "Predikere data"


editor_options: 
  chunk_output_type: console

---

 
## Introduksjon
 
Hensikten med denne rapporten er å predikere data ved hjelp av regresjon gjort i Rstudio, samt tolke en regresjonstabell. Rapporten inneholder tre deler. Ved å bestemme laktatterskel ved blodlaktatverdiene 2 og 4 mmol L^-1^ analyserer vi forholdet mellom prestasjon i watt og treningsintensitet. Vi analyserte hellningen til en qPCR kalibreringskurve, og tolket en regresjonstabell om forholdet mellom 3RM squat og tverrsnittsareal til type II muskelfibrer. 
 
## Metode
 
### Del 1: Predikert laktatterskel
 
I del 1 av rapporten ble datasettet cyclingstudy fra [@Sylta] brukt til å predikere to bestemte blodlaktatterskler ved 2 og 4 mmol L^-1^.  Det ble testet ut fire modeller for estimering av blodlaktatterskler for ID10,  en rett linje modell (m1), andregradspolynom (m2), tredjegradspolynom (m3) og fjerdegradspolynom (m4). Behandlingen av dataen ble gjort i [@RCoreTeam2021].

### Del 2: Predikert hellning på qPCR kalibreringskurve 
 
I del 2 av rapporten har vi ved hjelp av [@Schindelin] analysert et bilde av qPCR som ble hentet fram fra forsøket [@DNA]. Analysen av bildet gav oss data som vi anvendte i [@RCoreTeam2021] for å predikere hellningen til qPCR kalibreringskurven. 

### Del 3: Tolke en regresjonstabell
 
I del 3 av rapporten har vi gjort en statistisk analyse av forholdet mellom "Type II (FAST) fibers cross sectional area (micrometer^2^)" ved baseline (FAST_CSA_T1) og "Squat 3 repetition maximum load (kg)" ved baseline (SQUAT_3RM) fra datasettet til [@Haun2018] og [@Haun2019] for å undersøke om det var et linjert forhold.

## Resultat
 
### Del 1: Predikert laktatterskel 
 

```{r}
#| warning: false
#| message: false
#| echo: false
#| fig-cap: "Tre forskjellige polynomiale regressionsmodeller. "
#| label: fig-modell
library(tidyverse)
library(exscidata)
data("cyclingstudy")
lactate <- cyclingstudy %>%
  # Select columns needed for analysis
  select(subject, group, timepoint, lac.125:lac.375) %>%
  # Only one participant and time-point
  filter(timepoint == "pre", subject == 10) %>%
  # Pivot to long format data using the lactate columns
  pivot_longer(names_to = "watt", 
               values_to = "lactate", 
               names_prefix = "lac.",
               names_transform = list(watt = as.numeric),
               cols = lac.125:lac.375) %>%
  # Remove NA (missing) values to avoid warning/error messages.
  filter(!is.na(lactate))

# fit "straight line" model
m1 <- lm(lactate ~ watt, data = lactate)

# fit second degree polynomial
m2 <- lm(lactate ~ poly(watt, 2, raw = TRUE), data = lactate)

# fit third degree polynomial
m3 <- lm(lactate ~ poly(watt, 3, raw = TRUE), data = lactate)

# fit forth degree polynomial


# Store all residuals as new variables
lactate$resid.m1 <- resid(m1)
lactate$resid.m2 <- resid(m2)
lactate$resid.m3 <- resid(m3)


lactate %>%
  # gather all the data from the models
  pivot_longer(names_to = "model", 
               values_to = "residual", 
               names_prefix = "resid.", 
               names_transform = list(residual = as.numeric),
               cols = resid.m1:resid.m3) %>%  

# Plot values with the observed watt on x axis and residual values at the y
  ggplot(aes(watt, residual, fill = model)) + geom_point(shape = 21, size = 3) +
  labs(x = "Watt", y = "Residual"  ) +
  
  # To set the same colors/fills as above we use scale fill manual
  scale_fill_manual(values = c("#e41a1c", "#377eb8", "#4daf4a", "#ff7f00"))

ndf <- data.frame(watt = seq(from = 225, to = 350, by = 0.1)) # high resolution, we can find the nearest10:th a watt

ndf$predictions <- predict(m3, newdata = ndf)

# Which value of the predictions comes closest to our value of 4 mmol L-1?
# abs finds the absolute value, makes all values positive, 
# predictions - 4 givs an exact prediction of 4 mmol the value zero
# filter the row which has the prediction - 4 equal to the minimal absolut difference between prediction and 4 mmol
lactate_threshold_4 <- ndf %>%
  filter(abs(predictions - 4) == min(abs(predictions - 4))) 

lactate_threshold_2 <- ndf %>%
  filter(abs(predictions - 2) == min(abs(predictions - 2)))

lac_4 <- round(lactate_threshold_4$watt,0)
lac_2 <- round(lactate_threshold_2$watt,0)
``` 

 Vi fant ut at en tredjegradspolynom (m3) var den beste modellen for å estimere laktatverdier da residualene fra denne modellen varierte minst fra observerte verdier, se @fig-modell. 
 
 
```{r}
#| warning: FALSE
#| message: FALSE
#| echo: false
#| fig-cap: "Figur som viser 2 predikerte blodlaktatterskler for ID10"
#| label: fig-lac
library(tidyverse)
library(exscidata)

data("cyclingstudy")

cyclingstudy %>%
  # Select columns needed for analysis
  select(subject, group, timepoint, lac.125:lac.375) %>%
  # Only one participant and time-point
  filter(timepoint == "pre", subject == 10) %>%
  # Pivot to long format data using the lactate columns
  pivot_longer(names_to = "watt", 
               values_to = "lactate", 
               names_prefix = "lac.",
               names_transform = list(watt = as.numeric),
               cols = lac.225:lac.375) %>%
  # Plot the data, group = subject needed to connect the points
  ggplot(aes(watt, lactate, group = subject))  + 
  geom_line(lty = 2) +
  geom_point(shape = 21, fill = "lightblue", size = 2.5) +
  # Adding straight lines at specific values
  geom_hline(yintercept = 4, color = "red") +
  geom_vline(xintercept = 343, color = "blue") + 
   geom_hline(yintercept = 2, color = "red") +
  geom_vline(xintercept = 307.1, color = "blue") +
  labs(x = "Watt", y = expression("Laktat mmol L"^-1))
```



Vi har kalkulert blodlaktatterskel ved 4mmol L^-1^ til å være `r lac_4` watt, og blodlaktatterskel ved 2mmol L^-1^ til å være `r lac_2` watt for subject "10" ved timepoint "pre". Se @fig-lac.


### Del 2: Predikert hellning på qPCR kalibreringskurve 

```{r}
#| warning: false
#| message: false
#| echo: false

ladder <- data.frame(dist = c(408, 430.5, 462.5, 494.5, 536.5, 588.5, 646.5,
                              730.5, 772.5, 824.5, 888.5, 960.5, 1050.5),
                     
                     mw = c(1000, 900, 800, 700, 600, 500, 400, 300, 250, 200, 
                            150, 100, 50))

unknown <- data.frame(dist = c(700.5, 704.5, 702.5, 704.5, 708.5))


  cal <- lm(log(mw) ~ dist, data = ladder)


preds <- exp(predict(cal, newdata = unknown))

unknown$preds <- preds



  plot(ladder$dist, ladder$mw, log = "y", pch = 16, col = "blue",
       xlab = "Avstand", ylab = "Molekylvekt", 
       main = "Kalibreringsmodel: Avstand vs. Molekylvekt")
  lines(ladder$dist, exp(fitted(cal)), col = "black")
  points(unknown$dist, preds, pch = 17, col = "green")
  legend("topright", legend = c("Stige", "Kalibrering", "Ukjente prediksjoner"),
       col = c("blue", "black", "green"), pch = c(16, NA, 17), lty = c(NA, 1, NA))



```
Kalibreringsmodellen beskriver forholdet mellom avstand og molekylvekt. 
Etter log-transformering av molekylvekten, blir forholdet mellom avstand og molekylvekt tilnærmet lineært, noe som gjør den lineære regresjonsmodellen passende.
R-kvadratverdien på 0.98 indikerer hvor godt modellen passer til dataene da den er tilnærmet 1. 
De forutsagte molekylvektene for de ukjente prøvene er basert på den tilpassede kalibreringsmodellen. Predikasjonene for de ukjente prøvene gir et estimat av deres molekylvekt basert på deres migrasjonsavstand i gelen.
QQ-plottet forteller oss om forskjellene mellom observert og predikert molekylvekt følger en normalfordeling. Ideelt sett bør punktene i QQ-plottet falle langs referanselinjen noe de tilsynelatende gjør. Det vil si at modellen er godt spesifisert, og fanger forholdet mellom migrasjonsavstand og molekylvekt. 


### Del 3: Tolke en regresjonstabell

```{r}
#| warning: false
#| message: false
#| echo: false
#| label: fig-reg

library(exscidata)
library(tidyverse)
library(gt)
library(ggplot2)


dat <- hypertrophy %>%
  select(PARTICIPANT, GROUP, FAST_CSA_T1, SQUAT_3RM) 


model <- lm(FAST_CSA_T1 ~ SQUAT_3RM, dat) 
  
# Lage plottet
ggplot(dat, aes(x = SQUAT_3RM, y = FAST_CSA_T1)) +
  geom_point(color = "blue") +                      # Plotter datapunktene
  geom_smooth(method = "lm", se = TRUE, color = "red") +  # Legger til regresjonslinjen
  labs(
    title = "Regresjon av FAST CSA T1 på SQUAT 3RM",
    x = "SQUAT 3RM (kg)",
    y = expression("FAST CSA T1 ("* μ * m^2^")")) +
   
  theme_minimal()  


```
Resultatene viste ingen sammengeng mellom SQUAR_3RM og FAST_CSA_T1 (Estimat: 5.483 μm^2^, SE= 8.032, T= 0.683, p= 0.50). Se @fig-reg. 



## Diskusjon 

### Diskusjon - del 1
Rapporten viser hvordan man kan kalkulere seg fram til wattbelastning på sykkel ved bestemte laktatverdier på 2 og 4 mmol L^-1^ som beskriver intensiteten. Vi kom fram til at terskelwatten ved 2 mmol L^-1^ var 307, og at terskelwatten ved 4mmol L^-1^ var 343 for subject "10” ved timepoint "pre”. Beregningen ble gjort ved å bruke en tredjegradspolynomial modell da estimatene fra denne passet bedre enn en linjeær og andregradspolynonial  modell. En tredjegradspolynimial modell har tidligere blitt bevist å passe bra for estimering av blodlaktat-kurve [@Newell2007].   


### Diskusjon - del 2
Kalibreringsmodellen viser seg å være effektiv til å beskrive forholdet mellom avstand og molekylvekt, spesielt etter at molekylvekten ble log-transformert. Denne transformasjonen bidro til å gjøre forholdet tilnærmet lineær, noe som bekrefter at en lineær regresjonsmodell er en passende tilnærming. Med en R-kvadratverdi på 0.98 ser vi at modellen gir en nesten perfekt tilpasning til dataene, som styrer modellens prediksjonsnøyaktighet.
For de ukjente prøvene baseres prediksjonene av molekylvekt på modellen og gir troverdige estimater basert på migrasjonsavstand i gelen. QQ-plottet støtter også modellens robusthet, ettersom punktene faller nær referanselinjen, som indikerer at restene følger en normalfordeling. Dette antyder at modellen er godt spesifisert og gir en pålitelig beskrivelse av sammenhengen mellom migrasjonsavstand og molekylvekt. Samlet bekrefter resultatene at den utviklede modellen fanger opp de sentrale aspektene ved dataene på en god måte.

### Diskusjon - del 3
Resultatene viser ingen sammenheng mellom FAST CSA T1 og SQUAT 3RM (Estimat: 5.483 μm^2^, SE= 8.032, T= 0.683, p= 0.50). P-verdien på 0.50 tilsier i dette tilfellet at vi vil se et likt eller mer ekstremt resultat i 50% av repeterte studier gitt at nullhypotesen er sann. T-verdien er lav og indikerer at differansen mellom gjennomsnittet i utvalget og gjennomsnittet i populasjonen sannsynligvis er liten [@Spiegelhalter]. Den lave t-verdien sammen med den høye p-verdien indikerer at det ikke er statistisk grunnlag for å hevde at forskjellen mellom gjennomsnittet i utvalget og populasjonen er signifikant. Standardfeil (SE) forklarer hvor mye gjennomsnittet fra vårt utvalg forventes å avvike fra det sanne gjennomsnittet i populasjonen [@Spiegelhalter]. Oppsummert gir dette grunnlag for å si at det ikke noen sammenheng mellom økning i kilo i SQUAT 3RM og økning i μm^2^ FAST CSA T1.  